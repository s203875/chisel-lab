;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit VendingMachine : 
  module SevenSegDec : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<4>, out : UInt<7>}
    
    wire sevSeg : UInt
    sevSeg <= UInt<1>("h00")
    node _T = eq(UInt<1>("h00"), io.in) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      sevSeg <= UInt<6>("h03f") @[SevenSegDec.scala 15:28]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<1>("h01"), io.in) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        sevSeg <= UInt<3>("h06") @[SevenSegDec.scala 16:28]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<2>("h02"), io.in) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          sevSeg <= UInt<7>("h05b") @[SevenSegDec.scala 17:28]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<2>("h03"), io.in) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            sevSeg <= UInt<7>("h04f") @[SevenSegDec.scala 18:28]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_4 = eq(UInt<3>("h04"), io.in) @[Conditional.scala 37:30]
            when _T_4 : @[Conditional.scala 39:67]
              sevSeg <= UInt<7>("h066") @[SevenSegDec.scala 19:28]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_5 = eq(UInt<3>("h05"), io.in) @[Conditional.scala 37:30]
              when _T_5 : @[Conditional.scala 39:67]
                sevSeg <= UInt<7>("h06d") @[SevenSegDec.scala 20:28]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_6 = eq(UInt<3>("h06"), io.in) @[Conditional.scala 37:30]
                when _T_6 : @[Conditional.scala 39:67]
                  sevSeg <= UInt<7>("h07d") @[SevenSegDec.scala 21:28]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_7 = eq(UInt<3>("h07"), io.in) @[Conditional.scala 37:30]
                  when _T_7 : @[Conditional.scala 39:67]
                    sevSeg <= UInt<3>("h07") @[SevenSegDec.scala 22:28]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_8 = eq(UInt<4>("h08"), io.in) @[Conditional.scala 37:30]
                    when _T_8 : @[Conditional.scala 39:67]
                      sevSeg <= UInt<7>("h07f") @[SevenSegDec.scala 23:28]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_9 = eq(UInt<4>("h09"), io.in) @[Conditional.scala 37:30]
                      when _T_9 : @[Conditional.scala 39:67]
                        sevSeg <= UInt<7>("h06f") @[SevenSegDec.scala 24:28]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_10 = eq(UInt<4>("h0a"), io.in) @[Conditional.scala 37:30]
                        when _T_10 : @[Conditional.scala 39:67]
                          sevSeg <= UInt<7>("h077") @[SevenSegDec.scala 25:28]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_11 = eq(UInt<4>("h0b"), io.in) @[Conditional.scala 37:30]
                          when _T_11 : @[Conditional.scala 39:67]
                            sevSeg <= UInt<7>("h07c") @[SevenSegDec.scala 26:28]
                            skip @[Conditional.scala 39:67]
                          else : @[Conditional.scala 39:67]
                            node _T_12 = eq(UInt<4>("h0c"), io.in) @[Conditional.scala 37:30]
                            when _T_12 : @[Conditional.scala 39:67]
                              sevSeg <= UInt<6>("h039") @[SevenSegDec.scala 27:28]
                              skip @[Conditional.scala 39:67]
                            else : @[Conditional.scala 39:67]
                              node _T_13 = eq(UInt<4>("h0d"), io.in) @[Conditional.scala 37:30]
                              when _T_13 : @[Conditional.scala 39:67]
                                sevSeg <= UInt<7>("h05e") @[SevenSegDec.scala 28:28]
                                skip @[Conditional.scala 39:67]
                              else : @[Conditional.scala 39:67]
                                node _T_14 = eq(UInt<4>("h0e"), io.in) @[Conditional.scala 37:30]
                                when _T_14 : @[Conditional.scala 39:67]
                                  sevSeg <= UInt<7>("h079") @[SevenSegDec.scala 29:28]
                                  skip @[Conditional.scala 39:67]
                                else : @[Conditional.scala 39:67]
                                  node _T_15 = eq(UInt<4>("h0f"), io.in) @[Conditional.scala 37:30]
                                  when _T_15 : @[Conditional.scala 39:67]
                                    sevSeg <= UInt<7>("h071") @[SevenSegDec.scala 30:28]
                                    skip @[Conditional.scala 39:67]
    io.out <= sevSeg @[SevenSegDec.scala 34:10]
    
  module BcdTable : 
    input clock : Clock
    input reset : Reset
    output io : {flip adress : UInt<8>, data : UInt<8>}
    
    wire table : UInt<8>[100] @[BcdTable.scala 9:19]
    table[0] <= UInt<1>("h00") @[BcdTable.scala 12:14]
    table[1] <= UInt<1>("h01") @[BcdTable.scala 12:14]
    table[2] <= UInt<2>("h02") @[BcdTable.scala 12:14]
    table[3] <= UInt<2>("h03") @[BcdTable.scala 12:14]
    table[4] <= UInt<3>("h04") @[BcdTable.scala 12:14]
    table[5] <= UInt<3>("h05") @[BcdTable.scala 12:14]
    table[6] <= UInt<3>("h06") @[BcdTable.scala 12:14]
    table[7] <= UInt<3>("h07") @[BcdTable.scala 12:14]
    table[8] <= UInt<4>("h08") @[BcdTable.scala 12:14]
    table[9] <= UInt<4>("h09") @[BcdTable.scala 12:14]
    table[10] <= UInt<5>("h010") @[BcdTable.scala 12:14]
    table[11] <= UInt<5>("h011") @[BcdTable.scala 12:14]
    table[12] <= UInt<5>("h012") @[BcdTable.scala 12:14]
    table[13] <= UInt<5>("h013") @[BcdTable.scala 12:14]
    table[14] <= UInt<5>("h014") @[BcdTable.scala 12:14]
    table[15] <= UInt<5>("h015") @[BcdTable.scala 12:14]
    table[16] <= UInt<5>("h016") @[BcdTable.scala 12:14]
    table[17] <= UInt<5>("h017") @[BcdTable.scala 12:14]
    table[18] <= UInt<5>("h018") @[BcdTable.scala 12:14]
    table[19] <= UInt<5>("h019") @[BcdTable.scala 12:14]
    table[20] <= UInt<6>("h020") @[BcdTable.scala 12:14]
    table[21] <= UInt<6>("h021") @[BcdTable.scala 12:14]
    table[22] <= UInt<6>("h022") @[BcdTable.scala 12:14]
    table[23] <= UInt<6>("h023") @[BcdTable.scala 12:14]
    table[24] <= UInt<6>("h024") @[BcdTable.scala 12:14]
    table[25] <= UInt<6>("h025") @[BcdTable.scala 12:14]
    table[26] <= UInt<6>("h026") @[BcdTable.scala 12:14]
    table[27] <= UInt<6>("h027") @[BcdTable.scala 12:14]
    table[28] <= UInt<6>("h028") @[BcdTable.scala 12:14]
    table[29] <= UInt<6>("h029") @[BcdTable.scala 12:14]
    table[30] <= UInt<6>("h030") @[BcdTable.scala 12:14]
    table[31] <= UInt<6>("h031") @[BcdTable.scala 12:14]
    table[32] <= UInt<6>("h032") @[BcdTable.scala 12:14]
    table[33] <= UInt<6>("h033") @[BcdTable.scala 12:14]
    table[34] <= UInt<6>("h034") @[BcdTable.scala 12:14]
    table[35] <= UInt<6>("h035") @[BcdTable.scala 12:14]
    table[36] <= UInt<6>("h036") @[BcdTable.scala 12:14]
    table[37] <= UInt<6>("h037") @[BcdTable.scala 12:14]
    table[38] <= UInt<6>("h038") @[BcdTable.scala 12:14]
    table[39] <= UInt<6>("h039") @[BcdTable.scala 12:14]
    table[40] <= UInt<7>("h040") @[BcdTable.scala 12:14]
    table[41] <= UInt<7>("h041") @[BcdTable.scala 12:14]
    table[42] <= UInt<7>("h042") @[BcdTable.scala 12:14]
    table[43] <= UInt<7>("h043") @[BcdTable.scala 12:14]
    table[44] <= UInt<7>("h044") @[BcdTable.scala 12:14]
    table[45] <= UInt<7>("h045") @[BcdTable.scala 12:14]
    table[46] <= UInt<7>("h046") @[BcdTable.scala 12:14]
    table[47] <= UInt<7>("h047") @[BcdTable.scala 12:14]
    table[48] <= UInt<7>("h048") @[BcdTable.scala 12:14]
    table[49] <= UInt<7>("h049") @[BcdTable.scala 12:14]
    table[50] <= UInt<7>("h050") @[BcdTable.scala 12:14]
    table[51] <= UInt<7>("h051") @[BcdTable.scala 12:14]
    table[52] <= UInt<7>("h052") @[BcdTable.scala 12:14]
    table[53] <= UInt<7>("h053") @[BcdTable.scala 12:14]
    table[54] <= UInt<7>("h054") @[BcdTable.scala 12:14]
    table[55] <= UInt<7>("h055") @[BcdTable.scala 12:14]
    table[56] <= UInt<7>("h056") @[BcdTable.scala 12:14]
    table[57] <= UInt<7>("h057") @[BcdTable.scala 12:14]
    table[58] <= UInt<7>("h058") @[BcdTable.scala 12:14]
    table[59] <= UInt<7>("h059") @[BcdTable.scala 12:14]
    table[60] <= UInt<7>("h060") @[BcdTable.scala 12:14]
    table[61] <= UInt<7>("h061") @[BcdTable.scala 12:14]
    table[62] <= UInt<7>("h062") @[BcdTable.scala 12:14]
    table[63] <= UInt<7>("h063") @[BcdTable.scala 12:14]
    table[64] <= UInt<7>("h064") @[BcdTable.scala 12:14]
    table[65] <= UInt<7>("h065") @[BcdTable.scala 12:14]
    table[66] <= UInt<7>("h066") @[BcdTable.scala 12:14]
    table[67] <= UInt<7>("h067") @[BcdTable.scala 12:14]
    table[68] <= UInt<7>("h068") @[BcdTable.scala 12:14]
    table[69] <= UInt<7>("h069") @[BcdTable.scala 12:14]
    table[70] <= UInt<7>("h070") @[BcdTable.scala 12:14]
    table[71] <= UInt<7>("h071") @[BcdTable.scala 12:14]
    table[72] <= UInt<7>("h072") @[BcdTable.scala 12:14]
    table[73] <= UInt<7>("h073") @[BcdTable.scala 12:14]
    table[74] <= UInt<7>("h074") @[BcdTable.scala 12:14]
    table[75] <= UInt<7>("h075") @[BcdTable.scala 12:14]
    table[76] <= UInt<7>("h076") @[BcdTable.scala 12:14]
    table[77] <= UInt<7>("h077") @[BcdTable.scala 12:14]
    table[78] <= UInt<7>("h078") @[BcdTable.scala 12:14]
    table[79] <= UInt<7>("h079") @[BcdTable.scala 12:14]
    table[80] <= UInt<8>("h080") @[BcdTable.scala 12:14]
    table[81] <= UInt<8>("h081") @[BcdTable.scala 12:14]
    table[82] <= UInt<8>("h082") @[BcdTable.scala 12:14]
    table[83] <= UInt<8>("h083") @[BcdTable.scala 12:14]
    table[84] <= UInt<8>("h084") @[BcdTable.scala 12:14]
    table[85] <= UInt<8>("h085") @[BcdTable.scala 12:14]
    table[86] <= UInt<8>("h086") @[BcdTable.scala 12:14]
    table[87] <= UInt<8>("h087") @[BcdTable.scala 12:14]
    table[88] <= UInt<8>("h088") @[BcdTable.scala 12:14]
    table[89] <= UInt<8>("h089") @[BcdTable.scala 12:14]
    table[90] <= UInt<8>("h090") @[BcdTable.scala 12:14]
    table[91] <= UInt<8>("h091") @[BcdTable.scala 12:14]
    table[92] <= UInt<8>("h092") @[BcdTable.scala 12:14]
    table[93] <= UInt<8>("h093") @[BcdTable.scala 12:14]
    table[94] <= UInt<8>("h094") @[BcdTable.scala 12:14]
    table[95] <= UInt<8>("h095") @[BcdTable.scala 12:14]
    table[96] <= UInt<8>("h096") @[BcdTable.scala 12:14]
    table[97] <= UInt<8>("h097") @[BcdTable.scala 12:14]
    table[98] <= UInt<8>("h098") @[BcdTable.scala 12:14]
    table[99] <= UInt<8>("h099") @[BcdTable.scala 12:14]
    node _T = bits(io.adress, 6, 0)
    io.data <= table[_T] @[BcdTable.scala 15:11]
    
  module BcdTable_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip adress : UInt<8>, data : UInt<8>}
    
    wire table : UInt<8>[100] @[BcdTable.scala 9:19]
    table[0] <= UInt<1>("h00") @[BcdTable.scala 12:14]
    table[1] <= UInt<1>("h01") @[BcdTable.scala 12:14]
    table[2] <= UInt<2>("h02") @[BcdTable.scala 12:14]
    table[3] <= UInt<2>("h03") @[BcdTable.scala 12:14]
    table[4] <= UInt<3>("h04") @[BcdTable.scala 12:14]
    table[5] <= UInt<3>("h05") @[BcdTable.scala 12:14]
    table[6] <= UInt<3>("h06") @[BcdTable.scala 12:14]
    table[7] <= UInt<3>("h07") @[BcdTable.scala 12:14]
    table[8] <= UInt<4>("h08") @[BcdTable.scala 12:14]
    table[9] <= UInt<4>("h09") @[BcdTable.scala 12:14]
    table[10] <= UInt<5>("h010") @[BcdTable.scala 12:14]
    table[11] <= UInt<5>("h011") @[BcdTable.scala 12:14]
    table[12] <= UInt<5>("h012") @[BcdTable.scala 12:14]
    table[13] <= UInt<5>("h013") @[BcdTable.scala 12:14]
    table[14] <= UInt<5>("h014") @[BcdTable.scala 12:14]
    table[15] <= UInt<5>("h015") @[BcdTable.scala 12:14]
    table[16] <= UInt<5>("h016") @[BcdTable.scala 12:14]
    table[17] <= UInt<5>("h017") @[BcdTable.scala 12:14]
    table[18] <= UInt<5>("h018") @[BcdTable.scala 12:14]
    table[19] <= UInt<5>("h019") @[BcdTable.scala 12:14]
    table[20] <= UInt<6>("h020") @[BcdTable.scala 12:14]
    table[21] <= UInt<6>("h021") @[BcdTable.scala 12:14]
    table[22] <= UInt<6>("h022") @[BcdTable.scala 12:14]
    table[23] <= UInt<6>("h023") @[BcdTable.scala 12:14]
    table[24] <= UInt<6>("h024") @[BcdTable.scala 12:14]
    table[25] <= UInt<6>("h025") @[BcdTable.scala 12:14]
    table[26] <= UInt<6>("h026") @[BcdTable.scala 12:14]
    table[27] <= UInt<6>("h027") @[BcdTable.scala 12:14]
    table[28] <= UInt<6>("h028") @[BcdTable.scala 12:14]
    table[29] <= UInt<6>("h029") @[BcdTable.scala 12:14]
    table[30] <= UInt<6>("h030") @[BcdTable.scala 12:14]
    table[31] <= UInt<6>("h031") @[BcdTable.scala 12:14]
    table[32] <= UInt<6>("h032") @[BcdTable.scala 12:14]
    table[33] <= UInt<6>("h033") @[BcdTable.scala 12:14]
    table[34] <= UInt<6>("h034") @[BcdTable.scala 12:14]
    table[35] <= UInt<6>("h035") @[BcdTable.scala 12:14]
    table[36] <= UInt<6>("h036") @[BcdTable.scala 12:14]
    table[37] <= UInt<6>("h037") @[BcdTable.scala 12:14]
    table[38] <= UInt<6>("h038") @[BcdTable.scala 12:14]
    table[39] <= UInt<6>("h039") @[BcdTable.scala 12:14]
    table[40] <= UInt<7>("h040") @[BcdTable.scala 12:14]
    table[41] <= UInt<7>("h041") @[BcdTable.scala 12:14]
    table[42] <= UInt<7>("h042") @[BcdTable.scala 12:14]
    table[43] <= UInt<7>("h043") @[BcdTable.scala 12:14]
    table[44] <= UInt<7>("h044") @[BcdTable.scala 12:14]
    table[45] <= UInt<7>("h045") @[BcdTable.scala 12:14]
    table[46] <= UInt<7>("h046") @[BcdTable.scala 12:14]
    table[47] <= UInt<7>("h047") @[BcdTable.scala 12:14]
    table[48] <= UInt<7>("h048") @[BcdTable.scala 12:14]
    table[49] <= UInt<7>("h049") @[BcdTable.scala 12:14]
    table[50] <= UInt<7>("h050") @[BcdTable.scala 12:14]
    table[51] <= UInt<7>("h051") @[BcdTable.scala 12:14]
    table[52] <= UInt<7>("h052") @[BcdTable.scala 12:14]
    table[53] <= UInt<7>("h053") @[BcdTable.scala 12:14]
    table[54] <= UInt<7>("h054") @[BcdTable.scala 12:14]
    table[55] <= UInt<7>("h055") @[BcdTable.scala 12:14]
    table[56] <= UInt<7>("h056") @[BcdTable.scala 12:14]
    table[57] <= UInt<7>("h057") @[BcdTable.scala 12:14]
    table[58] <= UInt<7>("h058") @[BcdTable.scala 12:14]
    table[59] <= UInt<7>("h059") @[BcdTable.scala 12:14]
    table[60] <= UInt<7>("h060") @[BcdTable.scala 12:14]
    table[61] <= UInt<7>("h061") @[BcdTable.scala 12:14]
    table[62] <= UInt<7>("h062") @[BcdTable.scala 12:14]
    table[63] <= UInt<7>("h063") @[BcdTable.scala 12:14]
    table[64] <= UInt<7>("h064") @[BcdTable.scala 12:14]
    table[65] <= UInt<7>("h065") @[BcdTable.scala 12:14]
    table[66] <= UInt<7>("h066") @[BcdTable.scala 12:14]
    table[67] <= UInt<7>("h067") @[BcdTable.scala 12:14]
    table[68] <= UInt<7>("h068") @[BcdTable.scala 12:14]
    table[69] <= UInt<7>("h069") @[BcdTable.scala 12:14]
    table[70] <= UInt<7>("h070") @[BcdTable.scala 12:14]
    table[71] <= UInt<7>("h071") @[BcdTable.scala 12:14]
    table[72] <= UInt<7>("h072") @[BcdTable.scala 12:14]
    table[73] <= UInt<7>("h073") @[BcdTable.scala 12:14]
    table[74] <= UInt<7>("h074") @[BcdTable.scala 12:14]
    table[75] <= UInt<7>("h075") @[BcdTable.scala 12:14]
    table[76] <= UInt<7>("h076") @[BcdTable.scala 12:14]
    table[77] <= UInt<7>("h077") @[BcdTable.scala 12:14]
    table[78] <= UInt<7>("h078") @[BcdTable.scala 12:14]
    table[79] <= UInt<7>("h079") @[BcdTable.scala 12:14]
    table[80] <= UInt<8>("h080") @[BcdTable.scala 12:14]
    table[81] <= UInt<8>("h081") @[BcdTable.scala 12:14]
    table[82] <= UInt<8>("h082") @[BcdTable.scala 12:14]
    table[83] <= UInt<8>("h083") @[BcdTable.scala 12:14]
    table[84] <= UInt<8>("h084") @[BcdTable.scala 12:14]
    table[85] <= UInt<8>("h085") @[BcdTable.scala 12:14]
    table[86] <= UInt<8>("h086") @[BcdTable.scala 12:14]
    table[87] <= UInt<8>("h087") @[BcdTable.scala 12:14]
    table[88] <= UInt<8>("h088") @[BcdTable.scala 12:14]
    table[89] <= UInt<8>("h089") @[BcdTable.scala 12:14]
    table[90] <= UInt<8>("h090") @[BcdTable.scala 12:14]
    table[91] <= UInt<8>("h091") @[BcdTable.scala 12:14]
    table[92] <= UInt<8>("h092") @[BcdTable.scala 12:14]
    table[93] <= UInt<8>("h093") @[BcdTable.scala 12:14]
    table[94] <= UInt<8>("h094") @[BcdTable.scala 12:14]
    table[95] <= UInt<8>("h095") @[BcdTable.scala 12:14]
    table[96] <= UInt<8>("h096") @[BcdTable.scala 12:14]
    table[97] <= UInt<8>("h097") @[BcdTable.scala 12:14]
    table[98] <= UInt<8>("h098") @[BcdTable.scala 12:14]
    table[99] <= UInt<8>("h099") @[BcdTable.scala 12:14]
    node _T = bits(io.adress, 6, 0)
    io.data <= table[_T] @[BcdTable.scala 15:11]
    
  module VendingMachine : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip price : UInt<5>, flip coin2 : UInt<1>, flip coin5 : UInt<1>, flip buy : UInt<1>, releaseCan : UInt<1>, alarm : UInt<1>, seg : UInt<7>, an : UInt<4>}
    
    wire sevSeg : UInt
    sevSeg <= UInt<1>("h00")
    reg sum : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[VendingMachine.scala 17:20]
    wire select : UInt<4>
    select <= UInt<4>("h01")
    inst lys1 of SevenSegDec @[VendingMachine.scala 19:21]
    lys1.clock <= clock
    lys1.reset <= reset
    node _T = bits(sum, 7, 4) @[VendingMachine.scala 20:19]
    lys1.io.in <= _T @[VendingMachine.scala 20:13]
    inst sum1 of BcdTable @[VendingMachine.scala 21:21]
    sum1.clock <= clock
    sum1.reset <= reset
    sum1.io.adress <= sum @[VendingMachine.scala 22:18]
    inst pris of BcdTable_1 @[VendingMachine.scala 23:21]
    pris.clock <= clock
    pris.reset <= reset
    pris.io.adress <= io.price @[VendingMachine.scala 24:18]
    io.alarm <= UInt<1>("h00") @[VendingMachine.scala 25:11]
    io.releaseCan <= UInt<1>("h00") @[VendingMachine.scala 26:16]
    reg relReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[VendingMachine.scala 28:23]
    reg alar : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[VendingMachine.scala 29:21]
    reg stateReg : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[VendingMachine.scala 31:25]
    reg REG : UInt<1>, clock @[VendingMachine.scala 33:34]
    REG <= io.buy @[VendingMachine.scala 33:34]
    node _T_1 = eq(REG, UInt<1>("h00")) @[VendingMachine.scala 33:26]
    node risingb = and(io.buy, _T_1) @[VendingMachine.scala 33:24]
    node _T_2 = eq(io.buy, UInt<1>("h00")) @[VendingMachine.scala 34:18]
    reg REG_1 : UInt<1>, clock @[VendingMachine.scala 34:35]
    REG_1 <= io.buy @[VendingMachine.scala 34:35]
    node fallingb = and(_T_2, REG_1) @[VendingMachine.scala 34:26]
    reg REG_2 : UInt<1>, clock @[VendingMachine.scala 35:36]
    REG_2 <= io.coin5 @[VendingMachine.scala 35:36]
    node _T_3 = eq(REG_2, UInt<1>("h00")) @[VendingMachine.scala 35:28]
    node rising5 = and(io.coin5, _T_3) @[VendingMachine.scala 35:26]
    reg REG_3 : UInt<1>, clock @[VendingMachine.scala 36:36]
    REG_3 <= io.coin2 @[VendingMachine.scala 36:36]
    node _T_4 = eq(REG_3, UInt<1>("h00")) @[VendingMachine.scala 36:28]
    node rising2 = and(io.coin2, _T_4) @[VendingMachine.scala 36:26]
    node _T_5 = eq(UInt<3>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_5 : @[Conditional.scala 40:58]
      when risingb : @[VendingMachine.scala 56:21]
        node _T_6 = geq(sum, io.price) @[VendingMachine.scala 57:17]
        when _T_6 : @[VendingMachine.scala 57:28]
          stateReg <= UInt<3>("h03") @[VendingMachine.scala 58:19]
          relReg <= UInt<1>("h01") @[VendingMachine.scala 59:17]
          skip @[VendingMachine.scala 57:28]
        else : @[VendingMachine.scala 60:11]
          stateReg <= UInt<3>("h04") @[VendingMachine.scala 61:18]
          alar <= UInt<1>("h01") @[VendingMachine.scala 62:15]
          skip @[VendingMachine.scala 60:11]
        skip @[VendingMachine.scala 56:21]
      else : @[VendingMachine.scala 64:27]
        when rising5 : @[VendingMachine.scala 64:27]
          stateReg <= UInt<3>("h01") @[VendingMachine.scala 65:18]
          skip @[VendingMachine.scala 64:27]
        else : @[VendingMachine.scala 66:27]
          when rising2 : @[VendingMachine.scala 66:27]
            stateReg <= UInt<3>("h02") @[VendingMachine.scala 67:18]
            skip @[VendingMachine.scala 66:27]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_7 = eq(UInt<3>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_7 : @[Conditional.scala 39:67]
        stateReg <= UInt<3>("h00") @[VendingMachine.scala 71:15]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_8 = eq(UInt<3>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          stateReg <= UInt<3>("h00") @[VendingMachine.scala 74:15]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_9 = eq(UInt<3>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_9 : @[Conditional.scala 39:67]
            when fallingb : @[VendingMachine.scala 77:22]
              stateReg <= UInt<3>("h00") @[VendingMachine.scala 78:18]
              skip @[VendingMachine.scala 77:22]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_10 = eq(UInt<3>("h04"), stateReg) @[Conditional.scala 37:30]
            when _T_10 : @[Conditional.scala 39:67]
              when fallingb : @[VendingMachine.scala 82:24]
                stateReg <= UInt<3>("h00") @[VendingMachine.scala 83:20]
                skip @[VendingMachine.scala 82:24]
              skip @[Conditional.scala 39:67]
    node _T_11 = eq(stateReg, UInt<3>("h00")) @[VendingMachine.scala 88:16]
    when _T_11 : @[VendingMachine.scala 88:24]
      io.alarm <= UInt<1>("h00") @[VendingMachine.scala 89:13]
      io.releaseCan <= UInt<1>("h00") @[VendingMachine.scala 90:18]
      skip @[VendingMachine.scala 88:24]
    node _T_12 = eq(stateReg, UInt<3>("h01")) @[VendingMachine.scala 92:16]
    when _T_12 : @[VendingMachine.scala 92:23]
      node _T_13 = add(sum, UInt<3>("h05")) @[VendingMachine.scala 93:13]
      node _T_14 = tail(_T_13, 1) @[VendingMachine.scala 93:13]
      sum <= _T_14 @[VendingMachine.scala 93:8]
      skip @[VendingMachine.scala 92:23]
    node _T_15 = eq(stateReg, UInt<3>("h02")) @[VendingMachine.scala 95:16]
    when _T_15 : @[VendingMachine.scala 95:23]
      node _T_16 = add(sum, UInt<2>("h02")) @[VendingMachine.scala 96:13]
      node _T_17 = tail(_T_16, 1) @[VendingMachine.scala 96:13]
      sum <= _T_17 @[VendingMachine.scala 96:8]
      skip @[VendingMachine.scala 95:23]
    node _T_18 = eq(stateReg, UInt<3>("h03")) @[VendingMachine.scala 98:16]
    when _T_18 : @[VendingMachine.scala 98:22]
      io.releaseCan <= UInt<1>("h01") @[VendingMachine.scala 99:18]
      io.alarm <= UInt<1>("h00") @[VendingMachine.scala 100:13]
      node _T_19 = sub(sum, io.price) @[VendingMachine.scala 101:13]
      node _T_20 = tail(_T_19, 1) @[VendingMachine.scala 101:13]
      sum <= _T_20 @[VendingMachine.scala 101:8]
      skip @[VendingMachine.scala 98:22]
    node _T_21 = eq(stateReg, UInt<3>("h04")) @[VendingMachine.scala 103:16]
    when _T_21 : @[VendingMachine.scala 103:22]
      io.alarm <= UInt<1>("h01") @[VendingMachine.scala 104:13]
      io.releaseCan <= UInt<1>("h00") @[VendingMachine.scala 105:18]
      skip @[VendingMachine.scala 103:22]
    when fallingb : @[VendingMachine.scala 108:17]
      relReg <= UInt<1>("h00") @[VendingMachine.scala 109:11]
      alar <= UInt<1>("h00") @[VendingMachine.scala 110:9]
      skip @[VendingMachine.scala 108:17]
    reg tickCounterReg : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[VendingMachine.scala 113:31]
    node tick = eq(tickCounterReg, UInt<17>("h01869f")) @[VendingMachine.scala 114:29]
    node _T_22 = add(tickCounterReg, UInt<1>("h01")) @[VendingMachine.scala 116:35]
    node _T_23 = tail(_T_22, 1) @[VendingMachine.scala 116:35]
    tickCounterReg <= _T_23 @[VendingMachine.scala 116:18]
    when tick : @[VendingMachine.scala 117:15]
      tickCounterReg <= UInt<1>("h00") @[VendingMachine.scala 118:20]
      skip @[VendingMachine.scala 117:15]
    reg lowFrequCntReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[VendingMachine.scala 121:31]
    when tick : @[VendingMachine.scala 122:15]
      node _T_24 = add(lowFrequCntReg, UInt<1>("h01")) @[VendingMachine.scala 123:37]
      node _T_25 = tail(_T_24, 1) @[VendingMachine.scala 123:37]
      lowFrequCntReg <= _T_25 @[VendingMachine.scala 123:20]
      skip @[VendingMachine.scala 122:15]
    node _T_26 = eq(lowFrequCntReg, UInt<1>("h00")) @[VendingMachine.scala 126:24]
    when _T_26 : @[VendingMachine.scala 126:37]
      node _T_27 = bits(sum1.io.data, 7, 4) @[VendingMachine.scala 127:31]
      lys1.io.in <= _T_27 @[VendingMachine.scala 127:16]
      sevSeg <= lys1.io.out @[VendingMachine.scala 128:12]
      select <= UInt<3>("h07") @[VendingMachine.scala 129:12]
      skip @[VendingMachine.scala 126:37]
    node _T_28 = eq(lowFrequCntReg, UInt<1>("h01")) @[VendingMachine.scala 131:24]
    when _T_28 : @[VendingMachine.scala 131:36]
      node _T_29 = bits(sum1.io.data, 3, 0) @[VendingMachine.scala 132:31]
      lys1.io.in <= _T_29 @[VendingMachine.scala 132:16]
      sevSeg <= lys1.io.out @[VendingMachine.scala 133:12]
      select <= UInt<4>("h0b") @[VendingMachine.scala 134:12]
      skip @[VendingMachine.scala 131:36]
    node _T_30 = eq(lowFrequCntReg, UInt<2>("h02")) @[VendingMachine.scala 137:24]
    when _T_30 : @[VendingMachine.scala 137:37]
      node _T_31 = bits(pris.io.data, 7, 4) @[VendingMachine.scala 138:31]
      lys1.io.in <= _T_31 @[VendingMachine.scala 138:16]
      sevSeg <= lys1.io.out @[VendingMachine.scala 139:12]
      select <= UInt<4>("h0d") @[VendingMachine.scala 140:12]
      skip @[VendingMachine.scala 137:37]
    node _T_32 = eq(lowFrequCntReg, UInt<2>("h03")) @[VendingMachine.scala 143:24]
    when _T_32 : @[VendingMachine.scala 143:37]
      node _T_33 = bits(pris.io.data, 3, 0) @[VendingMachine.scala 144:31]
      lys1.io.in <= _T_33 @[VendingMachine.scala 144:16]
      sevSeg <= lys1.io.out @[VendingMachine.scala 145:12]
      select <= UInt<4>("h0e") @[VendingMachine.scala 146:12]
      skip @[VendingMachine.scala 143:37]
    node _T_34 = not(sevSeg) @[VendingMachine.scala 152:13]
    io.seg <= _T_34 @[VendingMachine.scala 152:10]
    io.an <= select @[VendingMachine.scala 153:9]
    
